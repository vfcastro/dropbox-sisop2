# Common

@Message
 - Criar msg
 - Enviar msg em socket
 - Receber msg em socket
 - Marshall/Unmarshall

# Server

@User
 - id (string)
 - sessions

@ServerCommunicator
 - Abre thread listen de conexão
 - Abrir thread por accept de cliente
 	- Qualquer accept sempre espera msgs de OPEN_SEND_CONN ou OPEN_RECV_CONN
 	- Se recebeu OPEN_SEND_CONN:
 	    - Gera connectioId e devolve para  o cliente na msg de OK
		- Thread fica aguardando receber mensagens do cliente no socket
    	- Faz o Dispatch das mensagens 
    - Se recebeu OPEN_RECV_CONN
        - Cria fila de msgs para  envio com base no connectionId
    	- Thread fica aguardando receber mensagens na fila para enviar ao cliente no socket

@ServerProcessor (dispatch)
  - Invocado quando recebe mensagem no socket
  - Identifica o tipo de mensagem e invoca a respectiva ação (abrir sessão, criar arquivo, etc..)

@FileManager
 - Criar arquivo
 - Apendar em arquivo
 - Deletar arquivo
 - Criar diretório
 - Procurar arquivo/diretorio por nome
 - Listar arquivos de diretorio

@ServerSync
 - Recebe chamadas do ServerProcessor
 - Posta msgs correspondentes na fila de msgs conforme connectionId


# CLIENT

@ClientCommunicator
 - Abrir conexão de de envio e recebimento com o server
 - Cria thread que fica aguardando receber msgs no socket de recebimento
 	- Recebe msg
 	- Chama o ClientProcessor para tratar msg
 - Solicitar abertura de sessão

@ClientProcessor (dispatch)
 - Recebe mensagens
 - Identifica o tipo de mensagem e invoca a respectiva ação (abrir sessão, criar arquivo, etc..)
   
@ClientSync
 - get_sync_dir
 - Monitorar eventos do sync_dir

@Arquivos
 - Criar arquivo
 - Apendar em arquivo
 - Deletar arquivo
 - Criar diretório
 - Procurar arquivo/diretorio por nome
 - Listar arquivos de diretorio
 
@Interface
 - Abrir thread de interface
 - Comandos...

@Frontend
	- Listen socket para atualizar novo primario

 
