# Common

@Message
 - Criar msg
 - Enviar msg em socket
 - Receber msg em socket
 - Marshall/Unmarshall

# Server

@User
 - id (string)
 - sessions

@ServerCommunicator
 - Abre thread listen de conexão
 - Abrir thread por accept de cliente
 	- Qualquer accept sempre espera msgs de OPEN_SEND_CONN ou OPEN_RECV_CONN
 	- Se recebeu OPEN_SEND_CONN:
		- Thread fica aguardando receber mensagens no socket de envio do cliente
    	- Dispatch mensagens 
    - Se recebeu OPEN_RECV_CONN
    	- Thread fica aguardando receber mensagens internas para envio no socket de recebimento do cliente

@ServerProcessor (dispatch)
  - Invocado quando recebe mensagem no socket
  - Identifica o tipo de mensagem e invoca a respectiva ação (abrir sessão, criar arquivo, etc..)

@UserManager
 - Carregar lista de usuarios
 - Criacao de usuário
 - Abertura sessão de usuário
   - Abrir thread de envio de mensagens
   - Abrir thread de recebimento de mensanges
 - Fechamento de sessão de usuário 

@FileManager
 - Criar arquivo
 - Apendar em arquivo
 - Deletar arquivo
 - Criar diretório
 - Procurar arquivo/diretorio por nome
 - Listar arquivos de diretorio

@SyncManager
 - Monitorar eventos de diretorio


# CLIENT

@ClientCommunicator
 - Abrir conexão de de envio e recebimento com o server
 - Cria thread que fica aguardando receber msgs no socket de recebimento
 	- Recebe msg
 	- Chama o ClientProcessor para tratar msg
 - Solicitar abertura de sessão

@ClientProcessor (dispatch)
 - Recebe mensagens
 - Identifica o tipo de mensagem e invoca a respectiva ação (abrir sessão, criar arquivo, etc..)
   
@Sincronizacao
 - get_sync_dir
 - Monitorar eventos do sync_dir

@Arquivos
 - Criar arquivo
 - Apendar em arquivo
 - Deletar arquivo
 - Criar diretório
 - Procurar arquivo/diretorio por nome
 - Listar arquivos de diretorio
 
@Interface
 - Abrir thread de interface
 - Comandos...

 
